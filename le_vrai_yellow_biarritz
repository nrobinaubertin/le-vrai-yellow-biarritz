#!/usr/bin/env python3

import sys
import os
import re
import json
from slugify import slugify
from pydub import AudioSegment

target = os.path.abspath(sys.argv[1]) if len(sys.argv) > 1 else "."
print(target)

trackList = []
files = [
    f.strip() for f in [
        os.path.join(target, f) for f in os.listdir(target) if os.path.isfile(os.path.join(target, f)) and os.path.splitext(f)[1] == ".mp3"
    ]
]
for i, trackFile in enumerate(files):
    path = os.path.relpath(trackFile.strip(), start=target)
    name = os.path.splitext(os.path.basename(trackFile))[0]
    slug = slugify(name)
    mp3 = AudioSegment.from_file(trackFile)
    trackList.append({
        "path": path,
        "slug": slug,
        "name": name,
        "dBFS": mp3.dBFS,
        "file": trackFile.strip(),
        "mp3": mp3,
    })

target_dBFS = 0;
for t in trackList:
    target_dBFS += t["dBFS"]
target_dBFS = target_dBFS / len(trackList);

def match_target_amplitude(sound, target_dBFS):
    change_in_dBFS = target_dBFS - sound.dBFS
    return sound.apply_gain(change_in_dBFS)

for t in trackList:
    if abs(target_dBFS - t["dBFS"]) > 1:
        normalized_sound = match_target_amplitude(t["mp3"], target_dBFS)
        normalized_sound.export(t["file"], format="mp3")

colors = [
    "#2b5764",
    "#33ae8a",
    "#8b95db",
    "#a1958c",
    "#a753f6",
    "#a76fa8",
    "#a8ea28",
    "#ae2862",
    "#b1f01f",
    "#d7757e",
    "#e49c6d",
    "#f2c436",
    "#f732e7",
]

htmlTags = ""
for i, t in enumerate(trackList):
    htmlTags += '''\
<a
    id="{slug}"
    href="#{slug}"
    style="color:{color}"
    class="d-inline-block m-2 tag"
    data-audio="{path}"
>
    #{name}
</a>\
'''.format(
        slug=t["slug"],
        name=t["name"],
        color=colors[i % len(colors)],
        path=t["path"]
    )

with open(target + os.sep + "index.html", 'w') as outputFile:
    print("""\
    <html>
        <head>
            <title>{title}</title>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
            <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
            <link href="https://fonts.googleapis.com/css?family=Lobster&display=swap" rel="stylesheet">
            <style>
                body{{font-family:'Lobster', cursive;}}
                a{{font-size:1.9rem;}}
                #currentTag:hover{{cursor:pointer;background-color:#ddd!important}}
                .btn-random-tag{{margin-bottom:-4rem;margin-top:-1rem}}
                .btn-random-tag svg{{height:4rem}}
            </style>
        </head>
        <body>
            <div class="jumbotron text-center m-0">
              <h1 class="display-4">{title}</h1>
              <p class="lead">{subtitle}</p>
              <button class="btn btn-random-tag" onclick="playRandom()">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 96 96">
                  <path d="M40.9 37.2c-1.2 1.9-2.6 4.7-4.2 8.4-.5-.9-.8-1.7-1.1-2.2-.3-.6-.7-1.2-1.2-1.9s-1-1.3-1.6-1.7c-.5-.4-1.2-.8-1.9-1.1-.8-.3-1.6-.4-2.5-.4h-6.9c-.3 0-.5-.1-.7-.3-.2-.2-.3-.4-.3-.7v-5.9c0-.3.1-.5.3-.7.2-.2.4-.3.7-.3h6.9c5.1-.1 9.3 2.2 12.5 6.8zm34.6 24.6c0 .3-.1.5-.3.7l-9.8 9.8c-.2.2-.4.3-.7.3-.3 0-.5-.1-.7-.3-.2-.2-.3-.4-.3-.7v-5.9h-7.3c-.9 0-1.6-.1-2.2-.2-.5-.1-1.2-.2-2-.3s-1.4-.3-1.9-.6c-.5-.2-1.1-.5-1.8-.9s-1.3-.8-1.8-1.2-1.1-1-1.7-1.6c-.6-.6-1.2-1.3-1.7-2.1 1.2-1.9 2.6-4.7 4.2-8.4.5.9.8 1.7 1.1 2.2s.7 1.2 1.2 1.9 1 1.3 1.6 1.7c.5.4 1.2.8 1.9 1.1s1.6.4 2.5.4h7.9v-5.9c0-.3.1-.5.3-.7.2-.2.4-.3.7-.3.2 0 .5.1.7.3l9.8 9.8c.2.3.3.6.3.9zm0-27.5c0 .3-.1.5-.3.7l-9.8 9.8c-.2.2-.4.3-.7.3-.3 0-.5-.1-.7-.3-.2-.2-.3-.4-.3-.7v-5.9h-7.9c-1 0-1.9.2-2.7.5-.8.3-1.5.8-2.1 1.4-.6.6-1.1 1.2-1.6 1.9s-.9 1.4-1.4 2.4c-.7 1.3-1.5 3-2.4 5.2-.6 1.4-1.1 2.5-1.5 3.4-.4.9-1 2-1.7 3.2-.7 1.2-1.3 2.3-2 3.1S39 61 38.1 61.8c-.9.9-1.8 1.6-2.8 2.1s-2 1-3.3 1.3a16 16 0 01-3.9.5h-6.9c-.3 0-.5-.1-.7-.3-.2-.2-.3-.4-.3-.7v-5.9c0-.3.1-.5.3-.7.2-.2.4-.3.7-.3h6.9c1 0 1.9-.2 2.7-.5s1.5-.8 2.1-1.4c.6-.6 1.1-1.2 1.6-1.9s.9-1.4 1.4-2.4c.7-1.3 1.5-3 2.4-5.2.6-1.4 1.1-2.5 1.5-3.4.4-.9 1-2 1.7-3.2s1.3-2.3 2-3.1 1.4-1.7 2.3-2.5c.9-.9 1.8-1.6 2.8-2.1 1-.5 2-1 3.3-1.3a16 16 0 013.9-.5h7.9v-5.9c0-.3.1-.5.3-.7.2-.2.4-.3.7-.3.2 0 .5.1.7.3l9.8 9.8c.2.2.3.5.3.8z" fill="#333"/>
                </svg>
              </button>
            </div>
            <div
                id="currentTag"
                class="p-5 text-center mb-5 bg-light"
                style="display:none"
                onclick="playTag(location.hash.slice(1))"
            >
                <div class="display-4 mb-2 text-muted" style="overflow:hidden"></div>
                <audio id="audioTag" class="mb-2"></audio>
            </div>
            <div class="container-fluid d-flex flex-wrap justify-content-center">
            {tags}
            </div>
            <script>
                let playTag = id => {{
                    let n = document.getElementById(id);
                    if (n) {{
                        history.replaceState(null, "", "#" + id);
                        if (window.player) {{
                            window.player.pause();
                        }}
                        window.player = new Audio(n.dataset.audio);
                        window.player.addEventListener('canplaythrough', _ => window.player.play());
                        let ct = document.getElementById('currentTag');
                        ct.style.display = 'block';
                        ct.children[0].innerHTML = id;
                        ct.children[1].src = n.dataset.audio;
                    }}
                }};
                let playRandom = _ => {{
                    let tags = Array.from(document.querySelectorAll('a.tag')).map(e => e.id)
                    let sid = +Date.now()%tags.length;
                    playTag(tags[sid])
                }}
                document.querySelectorAll('a.tag').forEach(n => n.addEventListener('click', e => {{e.preventDefault(); playTag(n.id)}}));
                if (location.hash) {{
                    playTag(location.hash.slice(1));
                    setTimeout(_ => window.scrollTo(0, 0));
                }}
            </script>
        </body>
    </html>\
    """.format(tags=htmlTags, title=sys.argv[2], subtitle=sys.argv[3]), file=outputFile)
