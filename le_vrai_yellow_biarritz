#!/usr/bin/env python3

import sys
import os
import re
import json
from slugify import slugify

target = os.path.abspath(sys.argv[1]) if len(sys.argv) > 1 else "."
print(target)

trackList = []
files = [
    f.strip() for f in [
        os.path.join(target, f) for f in os.listdir(target) if os.path.isfile(os.path.join(target, f)) and os.path.splitext(f)[1] == ".mp3"
    ]
]
for i, trackFile in enumerate(files):
    path = os.path.relpath(trackFile.strip(), start=target)
    name = os.path.splitext(os.path.basename(trackFile))[0]
    slug = slugify(name)
    trackList.append({
        "path": path,
        "slug": slug,
        "name": name,
    })

colors = [
    "#2b5764",
    "#33ae8a",
    "#8b95db",
    "#a1958c",
    "#a753f6",
    "#a76fa8",
    "#a8ea28",
    "#ae2862",
    "#b1f01f",
    "#d7757e",
    "#e49c6d",
    "#f2c436",
    "#f732e7",
]

htmlTags = ""
for i, t in enumerate(trackList):
    htmlTags += '''\
<a
    id="{slug}"
    href="#{slug}"
    style="color:{color}"
    class="d-inline-block m-2 tag"
    data-audio="{path}"
>
    #{name}
</a>\
'''.format(
        slug=t["slug"],
        name=t["name"],
        color=colors[i % len(colors)],
        path=t["path"]
    )

with open(target + os.sep + "index.html", 'w') as outputFile:
    print("""\
    <html>
        <head>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
            <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
            <link href="https://fonts.googleapis.com/css?family=Lobster&display=swap" rel="stylesheet">
            <style>
                body{{font-family:'Lobster', cursive;}}
                a{{font-size:1.9rem;}}
                #currentTag:hover{{cursor:pointer;background-color:#ddd!important}}
            </style>
        </head>
        <body>
            <div class="jumbotron text-center m-0">
              <h1 class="display-4">{title}</h1>
              <p class="lead">{subtitle}</p>
            </div>
            <div
                id="currentTag"
                class="p-5 text-center mb-5 bg-light"
                style="display:none"
                onclick="document.getElementById('audioTag').play()"
            >
                <div class="display-4 mb-2 text-muted" style="overflow:hidden"></div>
                <audio id="audioTag" class="mb-2"></audio>
            </div>
            <div class="container-fluid d-flex flex-wrap justify-content-center">
            {tags}
            </div>
            <script>
                let playTag = id => {{
                    let n = document.getElementById(id);
                    if (n) {{
                        history.replaceState(null, "", "#" + id);
                        let a = new Audio(n.dataset.audio);
                        a.addEventListener('canplaythrough', _ => a.play());
                        let ct = document.getElementById('currentTag');
                        console.log(ct);
                        ct.style.display = 'block';
                        ct.children[0].innerHTML = id;
                        ct.children[1].src = n.dataset.audio;
                    }}
                }};
                document.querySelectorAll('a.tag').forEach(n => n.addEventListener('click', e => {{e.preventDefault(); playTag(n.id)}}));
                if (location.hash) {{
                    playTag(location.hash.slice(1));
                }}
            </script>
        </body>
    </html>\
    """.format(tags=htmlTags, title=sys.argv[2], subtitle=sys.argv[3]), file=outputFile)
